@using ProyectoDeTitulo.DL;
@using ProyectoDeTitulo.DBModels;
@model ProyectoDeTitulo.DBModels.Permisos
@{
    IEnumerable<Estado> listEstado = ProyectoDeTitulo.DL.EstadoDL.GetEstadoList();
}

@using (Html.BeginForm("UpdatePermisos", "Permiso", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Permisos</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EstadoID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("EstadoID", new SelectList(listEstado.ToList(), "ID", "Nombre"), "Seleccione Estado", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EstadoID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
